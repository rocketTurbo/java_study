一、反射
1、作用：1.可以创建对象。2.调用对象的方法。3.设置和获取对象的属性。4.获取类名、包名等等

2、获取字节码对象的三种方式
类名.class
对象名.getClass()
Class.forName(类的全限定名)

3.获取一个类的方法
getMethods()和getDeclaredMethods()获取类的所有方法
getMethod("方法名",参数的类型.class...)
getDeclaredMethod("方法名",参数的类型.class...)

4.调用方法
method.invoke(对象,参数...)

5.获取类中的成员变量
getFields()和getDeclaredFields()

getField(参数名)和getDeclaredField(参数名)

获取参数值
field.get(对象)

设置参数值
field.set(对象,参数值)

6.获取构造函数
getConstructor(参数类型.class...)
调用构造函数constructor.newInstance(参数...)

调用无参构造:clazz.newInstance()

7.暴力反射
field/method.setAccessble(true)

二、BeanUtils
populate(bean,map),就是将map中的数据存放到JavaBean中

三、注解
自定义注解的语法:public @interface 注解名{}
自定义注解的属性有哪些类型:基本类型、String、枚举、Class、注解类型、以上类型的一维数组

如果这个注解有注解属性，那么在使用它的时候，就要给这个注解属性赋值

两个元注解:Target和Retention
Target表示作用的范围:METHOD、TYPE、FIELD、CONSTRUCTOR
Retention表示保留到哪个阶段:SOURCE、CLASS、RUNTIME

注解的解析:都是使用AnnotatedElement接口中的方法，Class、Method、Field、Constructor都实现了这个接口
它里面有四个方法:isAnnotationPresent(注解名.class),判断当前对象是否有某个注解
getAnnotation(注解名.class)获取当前对象上的某个注解对象
getAnnotations()和getDeclaredAnnotations()获取父类和自己的所有注解